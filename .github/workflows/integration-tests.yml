name: Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: "18.x"
  RUST_VERSION: "1.75.0"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      frontend-url: ${{ steps.setup.outputs.frontend-url }}
      backend-url: ${{ steps.setup.outputs.backend-url }}
      contracts-url: ${{ steps.setup.outputs.contracts-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../services/freelance-matching && npm ci
          cd ../../contracts-offerhub && cargo build

      - name: Build applications
        run: |
          npm run build
          cd backend && npm run build
          cd ../services/freelance-matching && npm run build

      - name: Setup test environment
        id: setup
        run: |
          echo "frontend-url=http://localhost:3000" >> $GITHUB_OUTPUT
          echo "backend-url=http://localhost:4000" >> $GITHUB_OUTPUT
          echo "contracts-url=http://localhost:8000" >> $GITHUB_OUTPUT

  start-services:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../services/freelance-matching && npm ci

      - name: Start backend
        run: |
          cd backend
          npm start &
          echo $! > backend.pid
          sleep 10

      - name: Start services
        run: |
          cd services/freelance-matching
          npm start &
          echo $! > services.pid
          sleep 10

      - name: Start frontend
        run: |
          npm start &
          echo $! > frontend.pid
          sleep 15

      - name: Wait for services
        run: |
          # Wait for backend
          timeout 60 bash -c 'until curl -f http://localhost:4000/api/health; do sleep 2; done'
          
          # Wait for frontend
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'
          
          # Wait for services
          timeout 60 bash -c 'until curl -f http://localhost:3001/health; do sleep 2; done'

      - name: Run integration tests
        run: |
          npm run test:integration

      - name: Stop services
        if: always()
        run: |
          if [ -f backend.pid ]; then kill $(cat backend.pid); fi
          if [ -f services.pid ]; then kill $(cat services.pid); fi
          if [ -f frontend.pid ]; then kill $(cat frontend.pid); fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: test-results/
          retention-days: 7

  api-tests:
    runs-on: ubuntu-latest
    needs: [setup, start-services]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Run API tests
        run: |
          cd backend
          npm run test:api

      - name: Upload API test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-results
          path: backend/test-results/
          retention-days: 7

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [setup, start-services]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: test-results/
          retention-days: 7

  performance-tests:
    runs-on: ubuntu-latest
    needs: [setup, start-services]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Run performance tests
        run: |
          cd backend
          npm run test:performance

      - name: Upload performance test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-test-results
          path: backend/performance-results/
          retention-days: 7
