name: Performance Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 3 * * 0' # Weekly on Sunday at 3 AM

env:
  NODE_VERSION: "18.x"

jobs:
  frontend-performance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: |
          npm start &
          sleep 30

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouse.config.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 7

  backend-performance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Build application
        run: |
          cd backend
          npm run build

      - name: Start application
        run: |
          cd backend
          npm start &
          sleep 10

      - name: Run load tests
        run: |
          cd backend
          npm run test:load

      - name: Upload load test results
        uses: actions/upload-artifact@v4
        with:
          name: load-test-results
          path: backend/load-test-results/
          retention-days: 7

  api-performance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Build application
        run: |
          cd backend
          npm run build

      - name: Start application
        run: |
          cd backend
          npm start &
          sleep 10

      - name: Run API performance tests
        run: |
          cd backend
          npm run test:api-performance

      - name: Upload API performance results
        uses: actions/upload-artifact@v4
        with:
          name: api-performance-results
          path: backend/api-performance-results/
          retention-days: 7

  memory-leak-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Build application
        run: |
          cd backend
          npm run build

      - name: Run memory leak tests
        run: |
          cd backend
          npm run test:memory-leaks

      - name: Upload memory leak test results
        uses: actions/upload-artifact@v4
        with:
          name: memory-leak-results
          path: backend/memory-leak-results/
          retention-days: 7

  performance-summary:
    runs-on: ubuntu-latest
    needs: [frontend-performance, backend-performance, api-performance, memory-leak-testing]
    if: always()

    steps:
      - name: Performance test summary
        run: |
          echo "⚡ Performance Test Summary:"
          echo "Frontend: ${{ needs.frontend-performance.result }}"
          echo "Backend: ${{ needs.backend-performance.result }}"
          echo "API: ${{ needs.api-performance.result }}"
          echo "Memory Leaks: ${{ needs.memory-leak-testing.result }}"
          
          if [[ "${{ needs.frontend-performance.result }}" == "failure" || 
                "${{ needs.backend-performance.result }}" == "failure" || 
                "${{ needs.api-performance.result }}" == "failure" || 
                "${{ needs.memory-leak-testing.result }}" == "failure" ]]; then
            echo "❌ Performance tests failed!"
            exit 1
          else
            echo "✅ All performance tests passed!"
          fi
