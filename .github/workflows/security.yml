name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM

env:
  NODE_VERSION: "18.x"
  RUST_VERSION: "1.75.0"

jobs:
  frontend-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Upload Snyk results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-frontend-results
          path: snyk-results/
          retention-days: 7

  backend-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Run npm audit
        run: |
          cd backend
          npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          working-directory: backend

      - name: Upload Snyk results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-backend-results
          path: backend/snyk-results/
          retention-days: 7

  contracts-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true

      - name: Install cargo-audit
        run: |
          source ~/.cargo/env
          cargo install cargo-audit

      - name: Run cargo audit
        run: |
          cd contracts-offerhub
          cargo audit

      - name: Run cargo clippy security checks
        run: |
          cd contracts-offerhub
          cargo clippy --all-targets --all-features -- -D warnings

  services-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: services/freelance-matching/package-lock.json

      - name: Install dependencies
        run: |
          cd services/freelance-matching
          npm ci

      - name: Run npm audit
        run: |
          cd services/freelance-matching
          npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          working-directory: services/freelance-matching

      - name: Upload Snyk results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-services-results
          path: services/freelance-matching/snyk-results/
          retention-days: 7

  codeql-analysis:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [javascript, typescript, rust]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  security-summary:
    runs-on: ubuntu-latest
    needs: [frontend-security, backend-security, contracts-security, services-security, codeql-analysis]
    if: always()

    steps:
      - name: Security scan summary
        run: |
          echo "üîí Security Scan Summary:"
          echo "Frontend: ${{ needs.frontend-security.result }}"
          echo "Backend: ${{ needs.backend-security.result }}"
          echo "Contracts: ${{ needs.contracts-security.result }}"
          echo "Services: ${{ needs.services-security.result }}"
          echo "CodeQL: ${{ needs.codeql-analysis.result }}"
          
          if [[ "${{ needs.frontend-security.result }}" == "failure" || 
                "${{ needs.backend-security.result }}" == "failure" || 
                "${{ needs.contracts-security.result }}" == "failure" || 
                "${{ needs.services-security.result }}" == "failure" || 
                "${{ needs.codeql-analysis.result }}" == "failure" ]]; then
            echo "‚ùå Security scan failed!"
            exit 1
          else
            echo "‚úÖ All security scans passed!"
          fi
